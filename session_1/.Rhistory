colnames(all_2) <- c('respid', 'sex', 'age', 'agec', 'isced97', deutsch, islam)
all_3 <- all_2
for( col in seq_along(names(all_3))){
all_3[, col]<- ifelse(all_3[, col] < 0, NA, all_3[, col])
}
### subset data
all_2 <- all_1 %>%
select(respid, sex,
age, agec, isced97,
num_range('mn', 11:21),
num_range('mn0', 1:6))
islam <- c('stop_islam', 'islam_is_ger', 'muslim_confl', 'muslim_surv', 'muslim_major', 'muslim_rad')
deutsch <- c('ger_citiz', 'christ_conf', 'pro_demo', 'ger_friends', 'only_ger','dis_roots', 'ger_affinity', 'speak_ger', 'western_val', 'parent_ger', "born_ger")
colnames(all_2) <- c('respid', 'sex', 'age', 'agec', 'isced97', deutsch, islam)
### clean from -11 and other NA
all_3 <- all_2
for( col in seq_along(names(all_3))){
all_3[, col]<- ifelse(all_3[, col] < 0, NA, all_3[, col])
}
### recode variables
all_3 <- all_3 %>%
mutate(gender = ifelse(sex %in% 2, 1, 0))  # F = 1, M = 0)
library(ggplot2)
library(tidyr)
### help function
norm_dens <- function(dat) {
grid <- with(dat, seq(min(value), max(value), length = 100))
data.frame(
predicted = grid,
density = dnorm(grid, mean(dat$value), sd(dat$value))
)}
### Islamophobie
names(all_3)
gg_data <- all_3[, c(1,6:15)] %>%
gather(key, value, -respid) %>%# , -trt
na.omit()
# melt(
#   messy,
#   variable.name = "key",
#   value.names = "value",
#   id.vars = c("id", "trt")
#   )
normaldens <- gg_data %>%
group_by(key) %>%
do(norm_dens(.))
ggplot(data = gg_data, aes(x = value)) +
facet_wrap(~ key) +
geom_histogram(aes(y = ..density..), binwidth = 1) +
geom_line(data = normaldens,
aes(x = predicted, y = density),
colour = "red")
### Deutsch-Sein
gg_data <- all_3[, c(1,16:22)] %>%
gather(key, value, -respid) %>%# , -trt
na.omit()
normaldens <- gg_data %>%
group_by(key) %>%
do(norm_dens(.))
ggplot(data = gg_data, aes(x = value)) +
facet_wrap(~ key) +
geom_histogram(aes(y = ..density..), binwidth = 1) +
geom_line(data = normaldens,
aes(x = predicted, y = density),
colour = "red")
### Boxplot
# all_3 %>%
#   ggplot(aes(x = factor(""), y = age)) +
#   geom_boxplot() +
#   geom_jitter(aes(x = factor(""), y = age, colour = agec),
#               alpha = .5) + xlab("")
library(pander)
library(Hmisc)
#names(all_3)
mcor <- all_3 %>%
select(-respid, -gender, -sex) %>%
#na.omit()
#cor(na.rm = T) %>%
#round(2)
as.matrix() %>%
rcorr(type="pearson")
mcor <- round(mcor[[1]], 2)
#str(mcor)
# lower.tri(x, diag = FALSE)
# upper.tri(x, diag = FALSE)
# Hide upper triangle
mcor_table <- mcor
mcor_table[lower.tri(mcor_table)]<- NA
# upper<-as.data.frame(mcor)
#library(xtable)
#print(xtable(upper), type="html")
#library(stargazer)
#ty <- 'latex'
#ty <- 'html'
#stargazer(mcor, summary = F, type = ty, column.sep.width = "0pt")
# make cells of r values bold if p value is <0.01
#pandoc.table(mcor[[1]], missing = '?', style = 'rmarkdown', round = 2)
library(xtable)
print(xtable(mcor_table, caption="Pearson's correlation matrix"),
rotate.colnames = T, size = "small", comments = F, missing = "?")
# devtools::install_github('talgalili/heatmaply')
# install.packages("heatmaply")
# library(heatmaply)
# heatmaply(mcor)#, margins = c(40, 40),
#          #k_col = 2, k_row = 2,
#          limits = c(-1,1))
# library(heatmaply)
heatmaply(mcor)
library(ggplot2)
library(gplots)
heatmaply_cor(mcor)
heatmaply(mcor)
mcor
heatmaply_cor(mcor, reorderfun = NULL)
heatmaply_cor(mcor, Rowv = NULL)
heatmaply_cor(mcor, Rowv = NULL, Colv = NULL)
heatmaply_cor(mcor, Rowv = NULL, Colv = NULL, dendrogram = "roe")
heatmaply_cor(mcor, Rowv = NULL, Colv = NULL, dendrogram = "row")
library(viridis)
heatmaply_cor(mcor, Rowv = NULL, Colv = NULL, viridis(100))
heatmaply_cor(mcor, Rowv = NULL, Colv = NULL, colors =  viridis(100))
heatmaply_cor(mcor, Rowv = NULL, Colv = NULL, colors =  viridis(10))
heatmaply_cor(mcor, Rowv = NULL, Colv = NULL, colors =  viridis(5))
heatmaply_cor(mcor, Rowv = NULL, Colv = NULL, colors =  viridis(100))
#rm(list=ls())
library(haven)
pa <- '/Users/simonroth/Dropbox/uni/MA/4_semester/SEM/data/allbus.dta/ZA5250_v2-0-0.dta'
all <- read_stata(pa)
library(dplyr)
all_1 <- all %>%
filter(german == 1 | german == 2) %>%
filter(eastwest == 1)
library(dplyr)
all_1 <- all %>%
filter(german == 1 | german == 2) %>%
filter(eastwest == 1)
library(dplyr)
all_1 <- all %>%
filter(german == 1 | german == 2) %>%
filter(eastwest == 1)
### subset data
all_2 <- all_1 %>%
select(respid, sex,
age, agec, isced97,
num_range('mn', 11:21),
num_range('mn0', 1:6))
islam <- c('stop_islam', 'islam_is_ger', 'muslim_confl', 'muslim_surv', 'muslim_major', 'muslim_rad')
deutsch <- c('ger_citiz', 'christ_conf', 'pro_demo', 'ger_friends', 'only_ger','dis_roots', 'ger_affinity', 'speak_ger', 'western_val', 'parent_ger', "born_ger")
colnames(all_2) <- c('respid', 'sex', 'age', 'agec', 'isced97', deutsch, islam)
### clean from -11 and other NA
all_3 <- all_2
for( col in seq_along(names(all_3))){
all_3[, col]<- ifelse(all_3[, col] < 0, NA, all_3[, col])
}
### recode variables
all_3 <- all_3 %>%
mutate(gender = ifelse(sex %in% 2, 1, 0))  # F = 1, M = 0)
library(ggplot2)
library(tidyr)
### help function
norm_dens <- function(dat) {
grid <- with(dat, seq(min(value), max(value), length = 100))
data.frame(
predicted = grid,
density = dnorm(grid, mean(dat$value), sd(dat$value))
)}
### Islamophobie
names(all_3)
gg_data <- all_3[, c(1,6:15)] %>%
gather(key, value, -respid) %>%# , -trt
na.omit()
# melt(
#   messy,
#   variable.name = "key",
#   value.names = "value",
#   id.vars = c("id", "trt")
#   )
normaldens <- gg_data %>%
group_by(key) %>%
do(norm_dens(.))
ggplot(data = gg_data, aes(x = value)) +
facet_wrap(~ key) +
geom_histogram(aes(y = ..density..), binwidth = 1) +
geom_line(data = normaldens,
aes(x = predicted, y = density),
colour = "red")
### Deutsch-Sein
gg_data <- all_3[, c(1,16:22)] %>%
gather(key, value, -respid) %>%# , -trt
na.omit()
normaldens <- gg_data %>%
group_by(key) %>%
do(norm_dens(.))
ggplot(data = gg_data, aes(x = value)) +
facet_wrap(~ key) +
geom_histogram(aes(y = ..density..), binwidth = 1) +
geom_line(data = normaldens,
aes(x = predicted, y = density),
colour = "red")
### Boxplot
# all_3 %>%
#   ggplot(aes(x = factor(""), y = age)) +
#   geom_boxplot() +
#   geom_jitter(aes(x = factor(""), y = age, colour = agec),
#               alpha = .5) + xlab("")
library(pander)
library(Hmisc)
#names(all_3)
mcor <- all_3 %>%
select(-respid, -gender, -sex) %>%
#na.omit()
#cor(na.rm = T) %>%
#round(2)
as.matrix() %>%
rcorr(type="pearson")
mcor <- round(mcor[[1]], 2)
#str(mcor)
# lower.tri(x, diag = FALSE)
# upper.tri(x, diag = FALSE)
# Hide upper triangle
mcor_table <- mcor
mcor_table[lower.tri(mcor_table)]<- NA
# upper<-as.data.frame(mcor)
#library(xtable)
#print(xtable(upper), type="html")
#library(stargazer)
#ty <- 'latex'
#ty <- 'html'
#stargazer(mcor, summary = F, type = ty, column.sep.width = "0pt")
# make cells of r values bold if p value is <0.01
#pandoc.table(mcor[[1]], missing = '?', style = 'rmarkdown', round = 2)
# devtools::install_github('talgalili/heatmaply')
# install.packages("heatmaply")
# library(heatmaply)
# heatmaply(mcor)#, margins = c(40, 40),
#          #k_col = 2, k_row = 2,
#          limits = c(-1,1))
# library(heatmaply)
heatmaply(mcor)
library(ggplot2)
library(gplots)
library(viridis)
heatmaply_cor(mcor, Rowv = NULL, Colv = NULL, colors =  viridis(100))
warnings()
gg_data <- all_3[, c(1,6:15)] %>%
gather(key, value, -respid) %>%# , -trt
na.omit()
norm_dens <- function(dat) {
grid <- seq(min(dat$value), max(dat$value), length = 100)
data.frame(
predicted = grid,
density = dnorm(grid, mean(dat$value), sd(dat$value))
)}
normaldens <- gg_data %>%
group_by(key) %>%
do(norm_dens(.))
library(ggplot2)
library(tidyr)
### help function
norm_dens <- function(dat) {
grid <- seq(min(dat$value), max(dat$value), length = 100)
data.frame(
predicted = grid,
density = dnorm(grid, mean(dat$value), sd(dat$value))
)}
### Islamophobie
#names(all_3)
gg_data <- all_3[, c(1,6:15)] %>%
gather(key, value, -respid) %>%# , -trt
na.omit()
# melt(
#   messy,
#   variable.name = "key",
#   value.names = "value",
#   id.vars = c("id", "trt")
#   )
normaldens <- gg_data %>%
group_by(key) %>%
do(norm_dens(.))
ggplot(data = gg_data, aes(x = value)) +
facet_wrap(~ key) +
geom_histogram(aes(y = ..density..), binwidth = 1) +
geom_line(data = normaldens,
aes(x = predicted, y = density),
colour = "red")
### Deutsch-Sein
gg_data <- all_3[, c(1,16:22)] %>%
gather(key, value, -respid) %>%# , -trt
na.omit()
normaldens <- gg_data %>%
group_by(key) %>%
do(norm_dens(.))
ggplot(data = gg_data, aes(x = value)) +
facet_wrap(~ key) +
geom_histogram(aes(y = ..density..), binwidth = 1) +
geom_line(data = normaldens,
aes(x = predicted, y = density),
colour = "red")
### Boxplot
# all_3 %>%
#   ggplot(aes(x = factor(""), y = age)) +
#   geom_boxplot() +
#   geom_jitter(aes(x = factor(""), y = age, colour = agec),
#               alpha = .5) + xlab("")
View(gg_data)
normaldens <- gg_data %>%
group_by(key) %>%
do(norm_dens(.))
View(normaldens)
all_3[, c(1,16:22)]
View(all_2)
c('respid', 'sex', 'age', 'agec', 'isced97', deutsch, islam)
colnames(all_2) <- c('respid', 'sex', 'age', 'agec', 'isced97', islam, deutsch)
View(all_2)
all_2 <- all_1 %>%
select(respid, sex,
age, agec, isced97,
num_range('mn', 11:21),
num_range('mn0', 1:6))
View(all_3)
colnames(all_2) <- c(c('respid', 'sex', 'age', 'agec', 'isced97'), deutsch, islam)
View(all_2)
### subset data
all_2 <- all_1 %>%
select(respid, sex,
age, agec, isced97,
num_range('mm', 11:21),
num_range('mn0', 1:6))
islam <- c('stop_islam', 'islam_is_ger', 'muslim_confl', 'muslim_surv', 'muslim_major', 'muslim_rad')
deutsch <- c('ger_citiz', 'christ_conf', 'pro_demo', 'ger_friends', 'only_ger','dis_roots', 'ger_affinity', 'speak_ger', 'western_val', 'parent_ger', "born_ger")
colnames(all_2) <- c(c('respid', 'sex', 'age', 'agec', 'isced97'), deutsch, islam)
### subset data
all_2 <- all_1 %>%
select(respid, sex,
age, agec, isced97,
num_range('mn', 11:21),
num_range('mm0', 1:6))
islam <- c('stop_islam', 'islam_is_ger', 'muslim_confl', 'muslim_surv', 'muslim_major', 'muslim_rad')
deutsch <- c('ger_citiz', 'christ_conf', 'pro_demo', 'ger_friends', 'only_ger','dis_roots', 'ger_affinity', 'speak_ger', 'western_val', 'parent_ger', "born_ger")
colnames(all_2) <- c(c('respid', 'sex', 'age', 'agec', 'isced97'), deutsch, islam)
### clean from -11 and other NA
all_3 <- all_2
for( col in seq_along(names(all_3))){
all_3[, col]<- ifelse(all_3[, col] < 0, NA, all_3[, col])
}
### recode variables
all_3 <- all_3 %>%
mutate(gender = ifelse(sex %in% 2, 1, 0))  # F = 1, M = 0)
View(all_3)
View(all_2)
library(ggplot2)
library(tidyr)
### help function
norm_dens <- function(dat) {
grid <- seq(min(dat$value), max(dat$value), length = 100)
data.frame(
predicted = grid,
density = dnorm(grid, mean(dat$value), sd(dat$value))
)}
### Islamophobie
#names(all_3)
gg_data <- all_3[, c(1,6:15)] %>%
gather(key, value, -respid) %>% # , -trt
na.omit()
# melt(
#   messy,
#   variable.name = "key",
#   value.names = "value",
#   id.vars = c("id", "trt")
#   )
normaldens <- gg_data %>%
group_by(key) %>%
do(norm_dens(.))
ggplot(data = gg_data, aes(x = value)) +
facet_wrap(~ key) +
geom_histogram(aes(y = ..density..), binwidth = 1) +
geom_line(data = normaldens,
aes(x = predicted, y = density),
colour = "red")
### Deutsch-Sein
gg_data <- all_3[, c(1,16:22)] %>%
gather(key, value, -respid) %>%# , -trt
na.omit()
normaldens <- gg_data %>%
group_by(key) %>%
do(norm_dens(.))
ggplot(data = gg_data, aes(x = value)) +
facet_wrap(~ key) +
geom_histogram(aes(y = ..density..), binwidth = 1) +
geom_line(data = normaldens,
aes(x = predicted, y = density),
colour = "red")
### Boxplot
# all_3 %>%
#   ggplot(aes(x = factor(""), y = age)) +
#   geom_boxplot() +
#   geom_jitter(aes(x = factor(""), y = age, colour = agec),
#               alpha = .5) + xlab("")
library(ggplot2)
library(tidyr)
### help function
norm_dens <- function(dat) {
grid <- seq(min(dat$value), max(dat$value), by = .1)
return(data.frame(
predicted = grid,
density = dnorm(grid, mean(dat$value), sd(dat$value))
))
}
### Islamophobie
#names(all_3)
gg_data <- all_3[, c(1,6:15)] %>%
gather(key, value, -respid) %>% # , -trt
na.omit()
# melt(
#   messy,
#   variable.name = "key",
#   value.names = "value",
#   id.vars = c("id", "trt")
#   )
normaldens <- gg_data %>%
group_by(key) %>%
do(norm_dens(.))
ggplot(data = gg_data, aes(x = value)) +
facet_wrap(~ key) +
geom_histogram(aes(y = ..density..), binwidth = 1) +
geom_line(data = normaldens,
aes(x = predicted, y = density),
colour = "red")
### Deutsch-Sein
gg_data <- all_3[, c(1,16:22)] %>%
gather(key, value, -respid) %>%# , -trt
na.omit()
normaldens <- gg_data %>%
group_by(key) %>%
do(norm_dens(.))
ggplot(data = gg_data, aes(x = value)) +
facet_wrap(~ key) +
geom_histogram(aes(y = ..density..), binwidth = 1) +
geom_line(data = normaldens,
aes(x = predicted, y = density),
colour = "red")
### Boxplot
# all_3 %>%
#   ggplot(aes(x = factor(""), y = age)) +
#   geom_boxplot() +
#   geom_jitter(aes(x = factor(""), y = age, colour = agec),
#               alpha = .5) + xlab("")
dat <- dd_data
dat <- gg_data
grid <- seq(min(dat$value, na.rm = T), max(dat$value, na.rm = T), by = .1)
data.frame(
predicted = grid,
density = dnorm(grid, mean(dat$value, na.rm = T), sd(dat$value, na.rm = T))
))
data.frame(
predicted = grid,
density = dnorm(grid, mean(dat$value, na.rm = T), sd(dat$value, na.rm = T))
)
grid <- seq(min(dat$value, na.rm = T), max(dat$value, na.rm =  T), by = .1)
grid
library(ggplot2)
library(tidyr)
### help function
norm_dens <- function(dat) {
dat <- gg_data
grid <- seq(min(dat$value, na.rm = T), max(dat$value, na.rm =  T), by = .1)
return(data.frame(
predicted = grid,
density = dnorm(grid, mean(dat$value, na.rm =  T), sd(dat$value, na.rm = T))
))
}
### Islamophobie
#names(all_3)
gg_data <- all_3[, c(1,6:15)] %>%
gather(key, value, -respid) %>% # , -trt
na.omit()
# melt(
#   messy,
#   variable.name = "key",
#   value.names = "value",
#   id.vars = c("id", "trt")
#   )
normaldens <- gg_data %>%
group_by(key) %>%
do(norm_dens(.))
ggplot(data = gg_data, aes(x = value)) +
facet_wrap(~ key) +
geom_histogram(aes(y = ..density..), binwidth = 1) +
geom_line(data = normaldens,
aes(x = predicted, y = density),
colour = "red")
### Deutsch-Sein
gg_data <- all_3[, c(1,16:22)] %>%
gather(key, value, -respid) %>%# , -trt
na.omit()
normaldens <- gg_data %>%
group_by(key) %>%
do(norm_dens(.))
ggplot(data = gg_data, aes(x = value)) +
facet_wrap(~ key) +
geom_histogram(aes(y = ..density..), binwidth = 1) +
geom_line(data = normaldens,
aes(x = predicted, y = density),
colour = "red")
### Boxplot
# all_3 %>%
#   ggplot(aes(x = factor(""), y = age)) +
#   geom_boxplot() +
#   geom_jitter(aes(x = factor(""), y = age, colour = agec),
#               alpha = .5) + xlab("")
(min(dat$value, na.rm = T)
)
(min(dat$value))
